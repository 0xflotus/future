// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");

function make(resolver) {
  var callbacks = [/* [] */0];
  var data = [/* None */0];
  Curry._1(resolver, (function (result) {
          var match = data[0];
          if (match) {
            return /* () */0;
          } else {
            data[0] = /* Some */[result];
            List.iter((function (cb) {
                    return Curry._1(cb, result);
                  }), callbacks[0]);
            callbacks[0] = /* [] */0;
            return /* () */0;
          }
        }));
  return /* Future */[(function (resolve) {
              var match = data[0];
              if (match) {
                return Curry._1(resolve, match[0]);
              } else {
                callbacks[0] = /* :: */[
                  resolve,
                  callbacks[0]
                ];
                return /* () */0;
              }
            })];
}

function value(x) {
  return make((function (resolve) {
                return Curry._1(resolve, x);
              }));
}

function map(f, param) {
  var get = param[0];
  return make((function (resolve) {
                return Curry._1(get, (function (result) {
                              return Curry._1(resolve, Curry._1(f, result));
                            }));
              }));
}

function flatMap(f, param) {
  var get = param[0];
  return make((function (resolve) {
                return Curry._1(get, (function (result) {
                              var match = Curry._1(f, result);
                              return Curry._1(match[0], resolve);
                            }));
              }));
}

function tap(f, future) {
  Curry._1(future[0], f);
  return future;
}

function get(f, param) {
  return Curry._1(param[0], f);
}

exports.make = make;
exports.value = value;
exports.map = map;
exports.flatMap = flatMap;
exports.tap = tap;
exports.get = get;
/* No side effect */
